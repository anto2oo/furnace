#!/bin/bash

_help() {

  _USAGE="OPTIONS"
  _DESCRIPTION="Configure a mail virtual domain with Postfix and generate and configure related openDKIM keys."
  _HELP["domain"]="Specify the mail domain to configure"
}

_params() {
  _PARAM["domain"]="d"

}

_method() {

  if [[ "$(grep -m 1 "${_ARG[domain]} " /etc/postfix/furnace/mail_domains)" ]]; then
    raise fatal "Could not configure domain ${_ARG[domain]}; already in /etc/postfix/furnace/mail_domains"
  fi

  if [[ "$(grep -m 1 "default._domainkey.${_ARG[domain]} " /etc/opendkim/KeyTable)" ]]; then
    raise fatal "Could not configure domain ${_ARG[domain]}; already in /etc/opendkim/KeyTable"
  fi

  if [[ "$(grep -m 1 "*@${_ARG[domain]} " /etc/opendkim/SigningTable)" ]]; then
    raise fatal "Could not configure domain ${_ARG[domain]}; already in /etc/opendkim/SigningTable"
  fi

  if [[ "$(grep -m 1 "${_ARG[domain]} " /etc/opendkim/TrustedHosts)" ]]; then
    raise fatal "Could not configure domain ${_ARG[domain]}; already in /etc/opendkim/TrustedHosts"
  fi

  ctime=$(date +"%Y-%m-%d %H:%m:%S")

  echo "## domain ${_ARG[domain]}; Added $ctime ##
${_ARG[domain]}  OK
" >>/etc/postfix/furnace/mail_domains

  postmap /etc/postfix/furnace/mail_domains

  if [ ! -d /etc/opendkim/keys/"${_ARG[domain]}"/ ]; then
    mkdir /etc/opendkim/keys/"${_ARG[domain]}"
    opendkim-genkey -D /etc/opendkim/keys/"${_ARG[domain]}"/ -d "${_ARG[domain]}" -s default
    chown -R opendkim: /etc/opendkim/keys/"${_ARG[domain]}"
  fi
  mv /etc/opendkim/keys/"${_ARG[domain]}"/default.private /etc/opendkim/keys/"${_ARG[domain]}"/default

  echo "## domain ${_ARG[domain]}; Added $ctime ##
default._domainkey.${_ARG[domain]} ${_ARG[domain]}:default:/etc/opendkim/keys/${_ARG[domain]}/default
" >>/etc/opendkim/KeyTable

  echo "## domain ${_ARG[domain]}; Added $ctime ##
*@${_ARG[domain]} default._domainkey.${_ARG[domain]}
" >>/etc/opendkim/SigningTable

  echo "## domain ${_ARG[domain]}; Added $ctime ##
${_ARG[domain]} 
" >>/etc/opendkim/TrustedHosts

  gen_key=$(cut -d\" -f2 /etc/opendkim/keys/"${_ARG[domain]}"/default.txt | tr '\n' ' ')

  base_domain=$(echo ${_ARG[domain]} | awk -F "." '{printf $(NF-1)"."$NF }')
  if [ -f /usr/share/furnace/dns/${base_domain}.txt ]; then
    base_dns_zone=$(cat /usr/share/furnace/dns/${base_domain}.txt | sed '1d')
  else
    base_dns_zone=""
  fi

  echo ";; Auto-generated by furnace on $(date +"%Y-%m-%d %H:%M:%S")
$base_dns_zone
;;; Begin mail configuration for ${_ARG[domain]}

;; MX Record
${_ARG[domain]}.   1   IN  MX  1   ${SERVER_ADDR}

;; DKIM Record
default._domainkey.${_ARG[domain]}.    1   IN  TXT \"${gen_key}\"

;; DMARC and SPF Records
${_ARG[domain]}.   1   IN  TXT \"v=spf1 mx\"
_dmarc.${_ARG[domain]}.    1   IN  TXT \"v=DMARC1; p=none\"
" >/usr/share/furnace/dns/${base_domain}.txt

  domain="${_ARG[domain]}" server_addr="$SERVER_ADDR" gen_key="$gen_key" ctime="$ctime" envsubst '$domain $server_addr $gen_key $ctime' </usr/share/furnace/templates/dns/base.txt >>/usr/share/furnace/dns/"${_ARG[domain]}".txt

  systemctl reload opendkim postfix

  raise notice "Configured mail services for domain ${_ARG[domain]}"
}
