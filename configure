#!/bin/bash

printf "======== \e[1mfurnace.sh initial setup\e[0m ========\n"

# Comment the following lines if you want to force installation on anything other than CentOS 7.x
if [ ! "$(awk '{print $4}' /etc/centos-release 2>/dev/null | cut -d. -f1)" == "7" ]; then

  echo "Sorry, furnace only supports Centos 7."
  exit 1

fi
# End of comment

if [ ! "$(id -u)" == "0" ]; then

  echo "Sorry, you must run this script as a superuser"
  exit 1

fi

read -rp "Server FQDN [$(hostname)] : " server_fqdn
if [ -z "$server_fqdn" ]; then
  server_fqdn=$(hostname)
fi

# If the config file already exists, do not overwrite it
if [ ! -f /etc/furnace.conf ]; then
  cp install/furnace.conf /etc/
fi

source /etc/furnace.conf

# Setting up bash autocompletion
cp install/bash/completion.sh /etc/bash_completion.d/furnace.sh

# Copying files to the installation directory
cp -r bin core templates furnace wrap "${INSTALL_DIR}"/
chmod +x "${INSTALL_DIR}"/furnace
mkdir "${INSTALL_DIR}"/backup "${INSTALL_DIR}"/ssl "${INSTALL_DIR}"/dns /tmp/furnace
ln -s "${INSTALL_DIR}"/furnace /usr/local/bin/furnace

# Including the logging module
source "${INSTALL_DIR}"/core/logging

###################################
####    INSTALLING SOFTWARE    ####
###################################

if [ "${UPGRADE_SERVICES}" == "yes" ]; then
  raise notice "Installing remi repository"

  yum -q install -y \
    wget \
    epel-release \
    yum-utils

  # Enable PHP from remi repository
  yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpm
  yum-config-manager --enable remi-php74

fi

raise notice "Installing packages from yum"

if ! (
  yum -q install -y \
    httpd \
    mod_ssl \
    bind-utils \
    openssl \
    mariadb-server \
    mariadb \
    php \
    php-mysql \
    php-fpm \
    php-mcrypt \
    phpmyadmin \
    postfix \
    dovecot \
    opendkim \
    roundcubemail \
    fail2ban \
    quota \
    quotatool \
    bash-completion \
    proftpd
); then
  raise fatal "Failed to get packages from yum. Exitting..."
fi

###################################
####   LINUX CONFIGURATIONS    ####
###################################

# Disabling SELinux
if [ ! "$(getenforce)" == "Disabled" ]; then
  sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux
fi

# Add appropriate services for the firewall
raise notice "Setting firewall rules"
firewall-cmd -q --permanent --zone=public --add-service=http
firewall-cmd -q --permanent --zone=public --add-service=https
firewall-cmd -q --permanent --zone=public --add-service=smtp
firewall-cmd -q --permanent --zone=public --add-service=smtps
firewall-cmd -q --permanent --zone=public --add-service=imap
firewall-cmd -q --permanent --zone=public --add-service=imaps
firewall-cmd -q --permanent --zone=public --add-service=pop3
firewall-cmd -q --permanent --zone=public --add-service=pop3s
firewall-cmd -q --permanent --zone=public --add-service=ftp
firewall-cmd -q --reload

# Add a group to prevent users from logging in via SSH
if ! groupadd furnace; then
  raise warning "Group furnace already exists. Could not create it"
fi

# Backing up and editing /etc/ssh/sshd_config
# from template install/sshd/sshd.conf
cp /etc/ssh/sshd_config /usr/share/furnace/backup/sshd_config
cat /usr/share/furnace/install/sshd/sshd.conf >>/etc/ssh/sshd_config

# Generating a random SQL root password
mysql_root_passwd="$(tr -dc 'a-zA-Z0-9' </dev/urandom | fold -w 16 | head -n 1)"

# Storing this password into a MySQL conf file
echo "[client]
user=root
password=$mysql_root_passwd" >/usr/share/furnace/my.root.cnf

# Applying correct permissions to prevent password to be read by others
chmod 600 /usr/share/furnace/my.root.cnf

# Adding an index to the default root
cp /usr/share/furnace/templates/skeleton/default.html /var/www/html/index.html

# Adding the default apache php pool
username="apache" envsubst '$username' </usr/share/furnace/templates/php-fpm/pool.conf >/etc/php-fpm.d/apache.conf

# Removing restrictions applied to normal users
sed -i '/^php_admin_value/ d' /etc/php-fpm.d/apache.conf
sed -i '/^php_admin_flag/ d' /etc/php-fpm.d/apache.conf
sed -i '/^chdir/ d' /etc/php-fpm.d/apache.conf

username="apache" envsubst '$username' </usr/share/furnace/templates/php-fpm/init.sh >/etc/init.d/php-fpm-apache
chmod +x /etc/init.d/php-fpm-apache
systemctl daemon-reload

#### Adding cron jobs for furnace

raise notice "Adding cron jobs to cron.d/"

# # 1. LE certificates renewal
echo "0 12 1/1 * ? * root furnace ssl renew >> /usr/share/furnace/cron.log" >/etc/cron.daily/furnace-ssl-renew

cp /etc/fstab /etc/fssave
awk '$2~"^/$"{$4="usrquota,usrjquota=aquota.user,jqfmt=vfsv0,"$4}1' OFS="\t" /etc/fstab >/etc/fstemp
mv /etc/fstemp /etc/fstab
if mount -o remount /; then
  quotacheck -agcum
  rm /etc/fssave
else
  rm /etc/fstab
  mv /etc/fssave /etc/fstab
  raise warning "Couldn't enable quotas (probably your fs doesn't support journaled quotas)"
  mount -o remount /
fi

# Adding fail2ban jails
cp /usr/share/furnace/install/fail2ban/sshd.conf /etc/fail2ban/jail.d/sshd.conf

wget -q -O /usr/share/furnace/ssl/getssl https://raw.githubusercontent.com/srvrco/getssl/master/getssl
mkdir /usr/share/furnace/ssl/.getssl
cp /usr/share/furnace/install/getssl/getssl.cfg /usr/share/furnace/ssl/.getssl/getssl.cfg
chmod +x /usr/share/furnace/ssl/getssl

###################################
#### MAIL SERVER CONFIGURATION ####
###################################

raise notice "Starting mail setup..."

# Creating groups/users to handle virtual mail
if ! groupadd furnace_mail -g 2222; then
  raise warning "Couldn't create furnace_mail group."
fi

if ! useradd furnace_mail -r -g 2222 -u 2222 -d /var/furnace_mail -m; then
  raise warning "Couldn't create furnace_mail user."
fi

##### 1. Postfix

# Generating a certificate for TLS encryption,
# if not exsting already
if [ ! -f /usr/share/furnace/ssl/mail.key ] && [ ! -f /usr/share/furnace/ssl/mail.crt ]; then
  openssl req -x509 -nodes -newkey rsa:2048 -keyout /usr/share/furnace/ssl/mail.key -out /usr/share/furnace/ssl/mail.crt -nodes -days 9999 -subj "/C=''/ST=''/L=''/O=''/OU=''/CN=''" >/dev/null 2>&1
else
  raise notice "Not generating new cert, already existing in ssl/"
fi

# Backing up and editing /etc/postfix/main.cf
# from template install/postfix/main.cf
cp /etc/postfix/main.cf /usr/share/furnace/backup/postfix.main.cf
cat /usr/share/furnace/install/postfix/main.cf >>/etc/postfix/main.cf

touch /etc/postfix/aliases

# Applying sed rules to /etc/postfix/master.cf
if [ ! -f /usr/share/furnace/backup/postfix.master.cf ]; then
  cp /etc/postfix/master.cf /usr/share/furnace/backup/postfix.master.cf
  sed -i 's/#submission/submission/g' /etc/postfix/master.cf
  sed -i '/-o syslog_name=postfix\/submission/s/^#//g' /etc/postfix/master.cf
  sed -i '/-o smtpd_tls_security_level=encrypt/s/^#//g' /etc/postfix/master.cf
  sed -i '/-o smtpd_sasl_auth_enable=yes/s/^#//g' /etc/postfix/master.cf
  sed -i '/-o smtpd_recipient_restrictions=permit_sasl_authenticated,reject/s/^#//g' /etc/postfix/master.cf
  sed -i '/-o milter_macro_daemon_name=ORIGINATING/s/^#//g' /etc/postfix/master.cf
  sed -i '/#smtps/s/^#//g' /etc/postfix/master.cf
  sed -i '/-o smtpd_tls_wrappermode=yes/s/^#//g' /etc/postfix/master.cf
  sed -i '/-o smtpd_sasl_auth_enable=yes/s/^#//g' /etc/postfix/master.cf
else
  raise warning "/etc/postfix/master.cf has already been edited by furnace. Not modifying it again."
fi

# Creating file structure to handle virtual
# mailboxes
if [ ! -d /etc/postfix/furnace ]; then
  mkdir /etc/postfix/furnace
fi

# Create virtual mailboxes databases
touch /etc/postfix/furnace/mail_domains
touch /etc/postfix/furnace/mail_aliases
touch /etc/postfix/furnace/mail_mailbox

# Hash databases previously created
postmap /etc/postfix/furnace/mail_domains
postmap /etc/postfix/furnace/mail_aliases
postmap /etc/postfix/furnace/mail_mailbox

##### 2. Dovecot

# Backing up and editing /etc/dovecot/dovecot.conf
# from template install/dovecot/dovecot.conf
mv /etc/dovecot/dovecot.conf /usr/share/furnace/backup/dovecot.conf
cp /usr/share/furnace/install/dovecot/dovecot.conf /etc/dovecot/

# Creating the password file for dovecot
touch /etc/dovecot/passwd
chmod 600 /etc/dovecot/passwd

##### 3. DKIM Signature

# Backing up and editing /etc/dovecot/dovecot.conf
# from template install//dovecot.conf
mv /etc/opendkim.conf /usr/share/furnace/backup/opendkim.conf
cp /usr/share/furnace/install/opendkim/opendkim.conf /etc/opendkim.conf
chown opendkim:root /etc/opendkim.conf

raise notice "Mail setup done."

###################################
####     WEB SERVICES SETUP    ####
###################################

mv /etc/httpd/conf/httpd.conf /usr/share/furnace/backup
cp /usr/share/furnace/install/httpd/httpd.conf /etc/httpd/conf/

# Acding configurations for phpMyAdmin and Roundcube to httpd
cp /usr/share/furnace/install/httpd/services.conf /etc/httpd/conf/services.conf
cp /usr/share/furnace/install/httpd/default.conf /etc/httpd/conf.d/default.conf

# Generating a self-signed cert for web services
if [ ! -f /usr/share/furnace/ssl/web_cert.pem ] && [ ! -f /usr/share/furnace/ssl/web_key.pem ]; then
  openssl req -newkey rsa:2048 -nodes -keyout /usr/share/furnace/ssl/web_key.pem -x509 -out /usr/share/furnace/ssl/web_cert.pem -days 9999 -subj "/C=''/ST=''/L=''/O=''/OU=''/CN=''" >/dev/null 2>&1
else
  raise notice "not generating new cert, already existing in /usr/share/furnace/ssl/"
fi

##### 1. Roundcube

raise notice "Installing Roundcube"

# Generating a random password for Roundcube SQL
mysql_roundcube_passwd="$(tr -dc 'a-zA-Z0-9' </dev/urandom | fold -w 16 | head -n 1)"

# Storing this password into a MySQL conf file
echo "[client]
user=roundcube_user
password=$mysql_roundcube_passwd" >/usr/share/furnace/my.roundcube.cnf

# Applying correct permissions to prevent password to be read by others
chmod 600 /usr/share/furnace/my.roundcube.cnf

# Copying Roundcube settings from install/config.inc.php
mysql_roundcube_passwd="$mysql_roundcube_passwd" envsubst '$mysql_roundcube_passwd' </usr/share/furnace/install/roundcubemail/config.inc.php >/etc/roundcubemail/config.inc.php
chown apache:root /etc/roundcubemail/config.inc.php
chmod 640 /etc/roundcubemail/config.inc.php

##### 3. phpMyAdmin

raise notice "Configuring phpMyAdmin"

raise notice "Restarting services..."

# Starting all the services
systemctl -q enable httpd mariadb opendkim postfix dovecot fail2ban
/sbin/chkconfig php-fpm-apache on
systemctl start httpd mariadb php-fpm-apache opendkim postfix dovecot fail2ban
systemctl restart sshd

# Settings MySQL defaults for roundcube
mysql -u root -Bse "CREATE DATABASE roundcube_db;"
mysql -u root -Bse "GRANT ALL ON roundcube_db.* TO roundcube_user@localhost IDENTIFIED BY '${mysql_roundcube_passwd}';"
mysql --defaults-file=/usr/share/furnace/my.roundcube.cnf roundcube_db </usr/share/roundcubemail/SQL/mysql.initial.sql

# Disabling MySQL test user and creating a password for root
mysql -u root -Bse "DROP USER ''@'localhost'; DROP USER ''@'$(hostname)'; DROP DATABASE test"
mysql -u root -Bse "UPDATE mysql.user SET Password=PASSWORD('${mysql_root_passwd}') WHERE User='root'; FLUSH PRIVILEGES;"

# Generating the default website account
admin_temp_pwd="$(tr -dc 'a-zA-Z0-9' </dev/urandom | fold -w 16 | head -n 1)"
echo "$admin_temp_pwd" >/usr/share/furnace/admin_paswd.cnf
furnace usr add -u=admin -p="$admin_temp_pwd"
furnace web_host add -u=admin -d="$server_fqdn" --allow-web-services
ln -s /usr/share/phpMyAdmin /home/admin/web/"$server_fqdn"/phpmyadmin
ln -s /var/www/html/webmail /home/admin/web/"$server_fqdn"/webmail

raise notice "Installation done."

printf "\n======== \e[1mThanks for using the installer\e[0m ========\n
An admin user has been created for your main website $server_fqdn. 
Its default password is : %s.
You can now access your web services using your server IP address :
https://${SERVER_ADDR}/phpmyadmin for phpMyAdmin and 
https://${SERVER_ADDR}/webmail for Roundcube\n" "$(cat /usr/share/furnace/admin_paswd.cnf)"
