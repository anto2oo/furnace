#!/bin/bash

source /etc/furnace.conf || {
  echo "Failed to load /etc/furnace.conf" >&2
  exit 1
}

# Include the all core functions
for file in "${INSTALL_DIR}"/core/*; do source $file; done

echo "[$(date --rfc-3339=seconds)] Trace from '$0 $1 $2'" >>"$LOG_FILE"

_MODULE="$1"
_ACTION="$2"
shift 2

if [[ $_MODULE == "-h" || $_MODULE == "--help" ]]; then
  help_modules
  exit 0
fi

declare -A _PARAM
declare -A _PARAM_FLAG
declare -A _ARG
declare -A _FLAG
declare -A _HELP

if [ -f "${INSTALL_DIR}"/bin/"$_MODULE"-"$_ACTION" ]; then
  raise debug "Sourcing ${INSTALL_DIR}-${_MODULE}-${_ACTION}"
  source "${INSTALL_DIR}"/bin/"${_MODULE}-${_ACTION}"
elif [[ -f "${INSTALL_DIR}"/modules/"$_MODULE"-"$_ACTION" ]]; then
  raise debug "Sourcing module ${INSTALL_DIR}-${_MODULE}-${_ACTION}"
  source "${INSTALL_DIR}"/modules/"${_MODULE}-${_ACTION}"
else
  raise fatal "Command $_MODULE $_ACTION is invalid"
fi

if [[ "$(type -t _params)" != "function" ]]; then
  raise fatal "The action file is missing a proper argument declaration"
elif [[ "$(type -t _help)" != "function" ]]; then
  raise fatal "The action file is missing a proper help section"
fi

# If the user wants help, stop execution here
if [[ $_ACTION == "-h" || $_ACTION == "--help" ]]; then
  help_actions "$_MODULE"
  exit 0
fi

_params

# For each argument
while (("$#")); do
  ARG=$1
  ASSIGNED=0

  # Special arguments declared here
  if [[ ${ARG} == "--help" ]] || [[ ${ARG} == "-h" ]]; then
    help
    exit 0
  fi

  if [[ ${ARG} == "--options" ]] || [[ ${ARG} == "-o" ]]; then
    options
    exit 0
  fi

  # Check if the given arg is declared as argument
  for PARAM in "${!_PARAM[@]}"; do
    if [[ ${ARG} == "--${PARAM}"* ]] || [[ ${ARG} == "-${_PARAM[$PARAM]}"* ]]; then
      _ARG["$PARAM"]="${2}"
      ASSIGNED=1
      shift 2
    fi
  done

  # Or as flag
  for FLAG in "${!_PARAM_FLAG[@]}"; do
    if [[ ${ARG} == "--${FLAG}" ]] || [[ ${ARG} == "-${_PARAM_FLAG[$FLAG]}" ]]; then
      _FLAG["$FLAG"]=1
      ASSIGNED=1
      shift 1
    fi
  done

  # If we didn't find it, raise an error
  if [[ $ASSIGNED == 0 ]]; then
    raise fatal "${ARG} is an invalid argument"
  fi

done

for PARAM in "${!_PARAM[@]}"; do
  if [[ -z "${_ARG[$PARAM]}" ]]; then
    raise fatal "--${PARAM}, -${_PARAM[$PARAM]} needs to be specified when using $_MODULE $_ACTION"
  fi
done

_method
